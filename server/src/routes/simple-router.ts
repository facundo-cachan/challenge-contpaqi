import { Request, Response, Router } from "express"
import StatusCodes from "http-status-codes"

import * as tokenService from "@util/token"
import { handlerAxios } from "@util/fetcher"

// Constants
const router = Router()
const { OK } = StatusCodes

// Paths
export const p = {
  root: "/",
  apple: "/apple",
  facebook: "/facebook",
} as const

router.get(p.root, async (_req: Request, res: Response) => {
  return res.status(OK).send('Auth')
})
  .get(p.apple, async (_req: Request, res: Response) => {
    const auth = await handlerAxios({
      url: 'https://appleid.apple.com/auth/keys',
    })
    const { data: { keys } } = auth
    const { n } = keys[0]

    /**
     * client_id: The application identifier for your app.
     * client_secret: A secret generated as a JSON Web Token that uses the secret key generated by the WWDR portal.
     */

    return res.status(OK).send(n)
    // const { token, email, apple_id } = req.body
    // const registeredUser = { apple_id, email };
    /* 
        tokenService.verify(url, req.body, (err: any) => {
          if (err) {
            res.status(401).send(err.message)
          } else {
            console.log(req.body);
          }
        });
         */
  })
  .post(p.facebook, async (req: Request, res: Response) => {
    console.log(req.body)
    return res.status(OK).json({ message: 'Auth with Facebook' })
  })

// Export router
export default router
